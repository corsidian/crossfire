#!/bin/sh
#
# crossfire	Stops and starts the crossfire XMPP service.
#
# chkconfig: 2345 99 1
# description: crossfire is an XMPP server, which is a server that facilitates \
#              XML based communication, such as chat.
# config: /opt/crossfire/conf/crossfire.xml
# config: /etc/sysconfig/crossfire
# pidfile: /var/run/crossfire.pid
# 
# This script has currently been tested on Redhat, CentOS, and Fedora  based
# systems.
#

#####
# Begin setup work
#####

# Initialization
PATH="/sbin:/bin:/usr/bin:/usr/sbin"
RETVAL=0

# Check that we are root ... so non-root users stop here.
[ "`id -u`" = 0 ] || exit 1

# Get config.
[ -f "/etc/sysconfig/crossfire" ] && . /etc/sysconfig/crossfire

# If crossfire user is not set in sysconfig, set to daemon.
[ -z "$crossfire_USER" ] && crossfire_USER="daemon"

# If pid file path is not set in sysconfig, set to /var/run/crossfire.pid.
[ -z "$crossfire_PIDFILE" ] && crossfire_PIDFILE="/var/run/crossfire.pid"

# -----------------------------------------------------------------

# If a crossfire home variable has not been specified, try to determine it.
if [ -z "$crossfire_HOME" -o ! -d "$crossfire_HOME" ]; then
	if [ -d "/usr/share/crossfire" ]; then
		crossfire_HOME="/usr/share/crossfire"
	elif [ -d "/usr/local/crossfire" ]; then
		crossfire_HOME="/usr/local/crossfire"
	elif [ -d "/opt/crossfire" ]; then
		crossfire_HOME="/opt/crossfire"
	else
		echo "Could not find crossfire installation under /opt, /usr/share, or /usr/local."
		echo "Please specify the crossfire installation location as variable crossfire_HOME"
		echo "in /etc/sysconfig/crossfire."
		exit 1
	fi
fi

# If log path is not set in sysconfig, set to $crossfire_HOME/logs.
[ -z "$crossfire_LOGDIR" ] && crossfire_LOGDIR="${crossfire_HOME}/logs"

# Attempt to locate java installation.
if [ -z "$JAVA_HOME" ]; then
	if [ -d "${crossfire_HOME}/jre" ]; then
		JAVA_HOME="${crossfire_HOME}/jre"
	elif [ -d "/etc/alternatives/jre" ]; then
		JAVA_HOME="/etc/alternatives/jre"
	else
		jdks=`ls -r1d /usr/java/j*`
		for jdk in $jdks; do
			if [ -f "${jdk}/bin/java" ]; then
				JAVA_HOME="$jdk"
				break
			fi
		done
	fi
fi
JAVACMD="${JAVA_HOME}/bin/java"

if [ ! -d "$JAVA_HOME" -o ! -x "$JAVACMD" ]; then
	echo "Error: JAVA_HOME is not defined correctly."
	echo "       Can not sure execute $JAVACMD."
	exit 1
fi

# Prepare location of crossfire libraries
crossfire_LIB="${crossfire_HOME}/lib"

# Prepare crossfire command line
crossfire_OPTS="${crossfire_OPTS} -DcrossfireHome=${crossfire_HOME} -Dcrossfire.lib.dir=${crossfire_LIB}"

# Prepare local java class path
if [ -z "$LOCALCLASSPATH" ]; then
	LOCALCLASSPATH="${crossfire_LIB}/startup.jar"
else
	LOCALCLASSPATH="${crossfire_LIB}/startup.jar:${LOCALCLASSPATH}"
fi

# Export any necessary variables
export JAVA_HOME JAVACMD

# Lastly, prepare the full command that we are going to run.
crossfire_RUN_CMD="${JAVACMD} -server ${crossfire_OPTS} -classpath \"${LOCALCLASSPATH}\" -jar \"${crossfire_LIB}/startup.jar\""

#####
# End setup work
#####



start() {
	OLD_PWD=`pwd`
	cd $crossfire_LOGDIR

    # Check if the server is already running. We look only for the pid file
    pid=`cat $crossfire_PIDFILE 2>&1`                                       
    if [ "$?" = "0" ]; then                                                
        echo "crossfire is already running. Remove $crossfire_PIDFILE if you know this to be untrue."                                 
        RETVAL=1                                                           
        return                                                             
    fi                                                                     
                                                                           
    # Start daemons.                                                       
    echo -n "Starting crossfire: "                                          

	rm -f nohup.out
	su -s /bin/sh -c "nohup $crossfire_RUN_CMD > $crossfire_LOGDIR/nohup.out 2>&1 &" $crossfire_USER
	RETVAL=$?
	PID=`ps ax --width=1000 | grep crossfire | grep startup.jar | awk '{print $1}'`

	if [ $RETVAL -eq 0 -a ! -z "$PID" -a ! -z "$crossfire_PIDFILE" ]; then
		echo $PID > $crossfire_PIDFILE
	fi

	echo

	[ $RETVAL -eq 0 -a -d /var/lock/subsys ] && touch /var/lock/subsys/crossfire

	sleep 1 # allows prompt to return
	cd $OLD_PWD
}

stop() {
	# Stop daemons.
	echo -n "Shutting down crossfire: "

	[ -f "$crossfire_PIDFILE" ] && kill `cat $crossfire_PIDFILE`
	RETVAL=$?
	echo

	[ $RETVAL -eq 0 -a -f "$crossfire_PIDFILE" ] && rm -f $crossfire_PIDFILE
	[ $RETVAL -eq 0 -a -f "/var/lock/subsys/crossfire" ] && rm -f /var/lock/subsys/crossfire
}

restart() {
	stop
	sleep 10 # give it a few moments to shut down
	start
}

condrestart() {
	[ -e "/var/lock/subsys/crossfire" ] && restart
	return 0
}

status() {
	pid=`cat $crossfire_PIDFILE 2>&1`
	if [ "$?" = "1" ]; then
		echo "crossfire is not running"
		RETVAL=3
	else 
		ps -p $pid > /dev/null 2>&1
		if [ "$?" = "0" ]; then 
			echo "crossfire is running"
			RETVAL=0
		else 
			echo "crossfire is not running"
			RETVAL=1
		fi
	fi
}


# Handle how we were called.
case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	condrestart)
		condrestart
		;;
	reload)
		restart
		;;
	status) 
		status
		;;
	*)
		echo "Usage $0 {start|stop|restart|status|condrestart|reload}"
		RETVAL=1
esac

exit $RETVAL
